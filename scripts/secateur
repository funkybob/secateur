#!/usr/bin/env python

import sys
import logging
import argparse
import datetime

import django
from django.utils import timezone

django.setup()

logging.basicConfig(level=logging.DEBUG)
logging.getLogger("secateur").setLevel(logging.DEBUG)
log = logging.getLogger(__name__)

import secateur.tasks
import secateur.models

parser = argparse.ArgumentParser("Secateur CLI")
parser.add_argument("--as", dest="secateur_username", type=str, required=True)
parser.add_argument(
    "--update-user",
    dest="update_user",
    action="store_true",
    help="Update the user's lists.",
)
parser.add_argument(
    "--block-followers",
    dest="block_followers",
    action="store_true",
    help="Block all followers of the specified accounts.",
)
parser.add_argument(
    "--mute-followers",
    dest="mute_followers",
    action="store_true",
    help="Mute all followers of the specified accounts.",
)
parser.add_argument(
    "--update-followers",
    dest="update_followers",
    action="store_true",
    help="Update follower lists of the specified accounts.",
)
parser.add_argument(
    "--unblock-expired",
    dest="unblock_expired",
    action="store_true",
    help="Unblock accounts that have reached their timeout.",
)
parser.add_argument(
    "--block", dest="block", action="store_true", help="Block the specified accounts."
)
parser.add_argument(
    "--mute", dest="mute", action="store_true", help="Mute the specified accounts."
)
parser.add_argument(
    "--unblock", dest="unblock", action="store_true", help="Unblock the specified accounts."
)
parser.add_argument(
    "--unmute", dest="unmute", action="store_true", help="Unmute the specified accounts."
)
parser.add_argument(
    "--weeks",
    dest="weeks",
    type=int,
    metavar="W",
    default=12,
    help="How many weeks to cut the account.",
)
parser.add_argument("accounts", metavar="ACCOUNT", nargs="*", type=str)
args = parser.parse_args()
log.debug("args: %s", args)

user = secateur.models.User.objects.get(username=args.secateur_username)
duration = datetime.timedelta(days=args.weeks * 7)
until = timezone.now() + duration
log.debug("duration = %r", duration)
log.debug("until = %r", until)


if args.update_user:
    secateur.tasks.twitter_update_mutes(user)
    secateur.tasks.twitter_update_blocks(user)
    secateur.tasks.twitter_update_followers(user)
    secateur.tasks.twitter_update_friends(user)

if args.unblock_expired:
    secateur.tasks.unblock_expired(user)

for account_screen_name in args.accounts:
    account = user.get_account_by_screen_name(account_screen_name)
    log.debug("Found account: %s", account)
    if args.update_followers:
        secateur.tasks.twitter_update_followers(
            secateur_user=user, account=account
        )
    if args.block_followers:
        secateur.tasks.twitter_block_followers(
            secateur_user=user, type=2, account=account, until=until
        )
    if args.mute_followers:
        secateur.tasks.twitter_block_followers(
            secateur_user=user, type=3, account=account, until=until
        )
    if args.block:
        secateur.tasks.create_relationship.delay(
            secateur_user_pk=user.pk, type=2, user_id=account.user_id, until=until
        )
    if args.mute:
        secateur.tasks.create_relationship.delay(
            secateur_user_pk=user.pk, type=3, user_id=account.user_id, until=until
        )
    if args.unblock:
        secateur.tasks.destroy_relationship.delay(
            secateur_user_pk=user.pk, type=2, user_id=account.user_id
        )
    if args.unmute:
        secateur.tasks.destroy_relationship.delay(
            secateur_user_pk=user.pk, type=3, user_id=account.user_id
        )
